version: "3.7"

services:
  cache:
    container_name: nodesuba-cache
    image: redis:6.2-alpine
    restart: always
    networks:
      - network
    env_file:
      - .env
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASS}
    volumes:
      - cache:/data

  backend:
    container_name: nodesuba-backend
    image: node:16.13-slim
    networks:
      - network
    restart: on-failure
    env_file:
      - .env
    ports:
      - 4000:4000
    working_dir: /usr/app
    command: >
      sh -c "apt update -y  && apt install openssl -y  && yarn install  && yarn prisma generate  && yarn prisma migrate dev  && yarn prisma db seed  && yarn start:dev"
    volumes:
      - "./backend/package.json:/usr/app/package.json"
      - "./backend/src:/usr/app/src"
      - "./backend/dist:/usr/app/dist"
      - "./backend/.eslintrc.js:/usr/app/.eslintrc.js"
      - "./backend/yarn.lock:/usr/app/yarn.lock"
      - "./backend/tsconfig.json:/usr/app/tsconfig.json"
      - "./backend/tsconfig.build.json:/usr/app/tsconfig.build.json"
      - "./backend/.eslintignore:/usr/app/.eslintignore"
      - "./backend/.prettierrc:/usr/app/.prettierrc"
      - "./backend/prisma:/usr/app/prisma"
      - "backend_node_modules:/usr/app/node_modules"
    depends_on:
      - database
      - cache

  database:
    container_name: nodesuba-database
    image: postgres:12.8
    networks:
      - network
    restart: on-failure
    env_file:
      - .env
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASS}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    depends_on:
      - database
    ports:
      - 8080:8080
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  backend_node_modules:
  cache:
